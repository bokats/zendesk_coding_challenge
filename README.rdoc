== README

SYSTEM REQUIREMENTS
- Ruby version: 2.1
- Rails version: 4.2
- MySQL installed on local machine

DATABASE CREATION
- Install MySQL if not already installed
  - Link for reference: https://dev.mysql.com/doc/mysql-getting-started/en/#mysql-getting-started-installing
- Once installed, type mysql -u root -p, then press Enter
- Once in mysql console, type `create database zendesk_search_development` and `create database zendesk_search_test`

APPLICATION SET UP
1. Run `bundle install`
2. Run `rake db:migrate`
3. Run `rake db:seed` 

RUN TEST SUITE
1. Run 'bundle exec rspec`
  - All tests should be passing. If not, something with set up is not working

APPLICATION START
- Run `rails runner 'Main.run_main_program'` to start the program

SOLUTION
1. The search is implemented using MySQL. The json files are parsed and added to relational tables. Tags and Domain Names are also added to separate tables for additional functionality.
2. Once all the information is added by user, the program makes a query in the database and returns the results.
3. The program allows the user to exit at any point. It also has built in functionality to check if the column type is a boolean and make sure user is passing in a boolean.
4. The program also allows the user to search by tag names or domain names and also see the available fields for each object.
5. Once the program is done, it prints the results, including related information from other related tables.

FUTURE IMPROVEMENT
1. Additional indexes can be added to columns that are frequently queried.
2. Caching can be added on top of the relational database.
3. GraphQL can be added so that search can be performed on multiple tables and only certain information returned.
4. Use of Elastic Search can also be implemented to speed up search if dataset is large.
5. Add more unit tests as current tests don't cover 100% due to time constraints.

Note: Due to lack of time, the console interaction and results are not formatted to a production level code, but it still renders all the relevant information.